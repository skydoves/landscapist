// This file was automatically generated by Compose Stability Analyzer
// https://github.com/skydoves/compose-stability-analyzer
//
// Do not edit this file directly. To update it, run:
//   ./gradlew :glide:stabilityDump

@Composable
public fun com.skydoves.landscapist.glide.GlideImage(imageModel: kotlin.Function0<kotlin.Any?>, modifier: androidx.compose.ui.Modifier, glideRequestType: com.skydoves.landscapist.glide.GlideRequestType, requestBuilder: @[Composable] androidx.compose.runtime.internal.ComposableFunction0<com.bumptech.glide.RequestBuilder<*>>): kotlin.Unit
  skippable: false
  restartable: true
  params:
    - imageModel: STABLE (function type)
    - modifier: STABLE (marked @Stable or @Immutable)
    - glideRequestType: STABLE
    - requestBuilder: STABLE (composable function type)

@Composable
private fun com.skydoves.landscapist.glide.GlideImage(recomposeKey: com.skydoves.landscapist.StableHolder<kotlin.Any?>, modifier: androidx.compose.ui.Modifier, imageOptions: com.skydoves.landscapist.ImageOptions, glideRequestType: com.skydoves.landscapist.glide.GlideRequestType, clearTarget: kotlin.Boolean, builder: com.skydoves.landscapist.StableHolder<com.bumptech.glide.RequestBuilder<kotlin.Any>>, requestListener: com.skydoves.landscapist.StableHolder<com.bumptech.glide.request.RequestListener<kotlin.Any>?>, content: @[Composable] @[ExtensionFunctionType] androidx.compose.runtime.internal.ComposableFunction2<androidx.compose.foundation.layout.BoxWithConstraintsScope, @[ParameterName(name = \): kotlin.Unit
  skippable: true
  restartable: true
  params:
    - recomposeKey: STABLE (marked @Stable or @Immutable)
    - modifier: STABLE (marked @Stable or @Immutable)
    - imageOptions: STABLE (marked @Stable or @Immutable)
    - glideRequestType: STABLE
    - clearTarget: STABLE (primitive type)
    - builder: STABLE (marked @Stable or @Immutable)
    - requestListener: STABLE (marked @Stable or @Immutable)
    - content: STABLE (composable function type)

@Composable
private fun com.skydoves.landscapist.glide.GlideThumbnail(requestSize: androidx.compose.ui.unit.IntSize, recomposeKey: com.skydoves.landscapist.StableHolder<kotlin.Any?>, imageOptions: com.skydoves.landscapist.ImageOptions, builder: com.skydoves.landscapist.StableHolder<com.bumptech.glide.RequestBuilder<kotlin.Any>>): kotlin.Unit
  skippable: true
  restartable: true
  params:
    - requestSize: STABLE (marked @Stable or @Immutable)
    - recomposeKey: STABLE (marked @Stable or @Immutable)
    - imageOptions: STABLE (marked @Stable or @Immutable)
    - builder: STABLE (marked @Stable or @Immutable)

@Composable
public fun com.skydoves.landscapist.glide.LocalGlideProvider.getGlideRequestBuilder(): com.bumptech.glide.RequestBuilder<*>
  skippable: true
  restartable: true
  params:

@Composable
public fun com.skydoves.landscapist.glide.LocalGlideProvider.getGlideRequestManager(): com.bumptech.glide.RequestManager
  skippable: true
  restartable: true
  params:

@Composable
public fun com.skydoves.landscapist.glide.LocalGlideProvider.getGlideRequestOptions(): com.bumptech.glide.request.RequestOptions
  skippable: true
  restartable: true
  params:

@Composable
public fun com.skydoves.landscapist.glide.rememberGlideImageState(initialState: com.skydoves.landscapist.glide.GlideImageState, key: kotlin.Any?): androidx.compose.runtime.MutableState<com.skydoves.landscapist.glide.GlideImageState>
  skippable: true
  restartable: true
  params:
    - initialState: STABLE (marked @Stable or @Immutable)
    - key: STABLE

@Composable
internal fun com.skydoves.landscapist.glide.rememberTarget(target: com.skydoves.landscapist.glide.FlowCustomTarget, imageOptions: com.skydoves.landscapist.ImageOptions, clearTarget: kotlin.Boolean): com.skydoves.landscapist.glide.FlowCustomTarget
  skippable: false
  restartable: true
  params:
    - target: UNSTABLE (has mutable properties or unstable members)
    - imageOptions: STABLE (marked @Stable or @Immutable)
    - clearTarget: STABLE (primitive type)

